// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render component 1`] = `
<RCTScrollView
  collapsable={false}
  contentContainerStyle={
    Object {
      "paddingTop": 15,
    }
  }
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  style={
    Object {
      "backgroundColor": "#fafafa",
      "flex": 1,
    }
  }
>
  <View>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            undefined,
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Read the Expo documentation
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            undefined,
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Read the React Navigation documentation
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            Object {
              "borderBottomWidth": 0.5,
            },
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Ask a question on the forums
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
  </View>
</RCTScrollView>
`;
