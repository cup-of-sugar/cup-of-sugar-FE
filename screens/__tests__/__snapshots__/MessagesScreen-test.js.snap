// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render without error if on borrowing path 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "height": "100%",
      "paddingTop": 20,
    }
  }
>
  <RCTScrollView
    collapsable={false}
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    scrollIndicatorInsets={
      Object {
        "right": 1,
      }
    }
    style={
      Object {
        "backgroundColor": "#fff",
        "height": "100%",
        "paddingTop": 20,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#0C94E1",
              "borderTopLeftRadius": 7,
              "borderTopRightRadius": 7,
              "height": 70,
              "opacity": 1,
              "padding": 20,
              "width": 180,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontSize": 25,
                "fontWeight": "bold",
              }
            }
          >
            Inbox
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#385A94",
              "borderTopLeftRadius": 7,
              "borderTopRightRadius": 7,
              "height": 70,
              "opacity": 1,
              "padding": 20,
              "width": 180,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontSize": 25,
                "fontWeight": "bold",
                "textAlign": "right",
              }
            }
          >
            Sent
          </Text>
        </View>
      </View>
      <RCTScrollView
        collapsable={false}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        style={
          Object {
            "backgroundColor": "#0C94E1",
            "borderBottomLeftRadius": 7,
            "borderBottomRightRadius": 7,
            "height": 500,
            "paddingVertical": 20,
          }
        }
      >
        <View>
          <Text
            style={
              Object {
                "alignSelf": "center",
                "color": "#fff",
                "fontSize": 20,
                "fontWeight": "bold",
                "margin": 10,
                "marginTop": 50,
              }
            }
          >
            No messages found!
          </Text>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
</View>
`;

exports[`should render without error if on lending path 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "height": "100%",
      "paddingTop": 20,
    }
  }
>
  <RCTScrollView
    collapsable={false}
    contentContainerStyle={
      Object {
        "padding": 15,
      }
    }
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    scrollIndicatorInsets={
      Object {
        "right": 1,
      }
    }
    style={
      Object {
        "backgroundColor": "#fff",
        "height": "100%",
        "paddingTop": 20,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#0C94E1",
              "borderTopLeftRadius": 7,
              "borderTopRightRadius": 7,
              "height": 70,
              "opacity": 1,
              "padding": 20,
              "width": 180,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontSize": 25,
                "fontWeight": "bold",
              }
            }
          >
            Inbox
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#385A94",
              "borderTopLeftRadius": 7,
              "borderTopRightRadius": 7,
              "height": 70,
              "opacity": 1,
              "padding": 20,
              "width": 180,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontSize": 25,
                "fontWeight": "bold",
                "textAlign": "right",
              }
            }
          >
            Sent
          </Text>
        </View>
      </View>
      <RCTScrollView
        collapsable={false}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        style={
          Object {
            "backgroundColor": "#0C94E1",
            "borderBottomLeftRadius": 7,
            "borderBottomRightRadius": 7,
            "height": 500,
            "paddingVertical": 20,
          }
        }
      >
        <View>
          <Text
            style={
              Object {
                "alignSelf": "center",
                "color": "#fff",
                "fontSize": 20,
                "fontWeight": "bold",
                "margin": 10,
                "marginTop": 50,
              }
            }
          >
            No messages found!
          </Text>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
</View>
`;
